#!/bin/bash

if test -z "$JMARECEIPT_ENV"; then
    JMARECEIPT_ENV="@jma-receipt-env@"
fi
if ! test -f "$JMARECEIPT_ENV"; then
    exit 0
fi

. $JMARECEIPT_ENV

umask 022

#--------------------------
# $1 : method (update / check)
# $2 : HOSPNUM
# $3 : supervisor (not use)
#--------------------------

METHOD=$1
HOSPNUM=$2

PRGDIR=/var/tmp/orca-prg@VERSION@
PATCHDIR=/var/lib/jma-receipt/patch
PACKAGEFILE=patch@VERSION@.gz
PRGPATH=$PGUPGRADEPATH/@VERSION@
PATCHLIST=$PATCHDIR/patch-file-list
PATCHMD5=$PATCHDIR/patchmd5.yml
CACERTFILE=/etc/ssl/certs/orca-project-ca-1.crt
LOGDIR=/var/log/jma-receipt
if [ "$METHOD" = "update" ]; then
  LOG="$LOGDIR"/program_upgrade_online.log
else
  LOG="$LOGDIR"/program_upgrade_check.log
fi

# echo message (default character-code EUC)
echomsg() {
  if [ "${LANG}" = "ja_JP.UTF-8" ] || [ "${LANG}" = "ja_JP.UTF8" ]; then
    echo `echo $1 | nkf -wE | tee -a $2`
  else
    echo $1 | tee -a $2
  fi
}

jobend97() {
  $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB2 -parameter JBE0000001PRGMNT97,$HOSPNUM,,,"$1"
  rm -rf $PRGDIR
  exit 97
}

rm -f ${LOG}

OFFLINEPATH=`echo $PRGPATH | sed -ne 's#file://##p'`
if [ -z $OFFLINEPATH ]; then
  OFFLINE="online"
else
  OFFLINE="offline"
  PRGPATH=$OFFLINEPATH
fi
echomsg "${OFFLINE}" ${LOG}

if ! [ -d $PRGDIR ]; then 
  mkdir $PRGDIR
fi
rm -rf $PRGDIR/*

echomsg "${PACKAGEFILE}" ${LOG}
echomsg "${PRGPATH}" ${LOG}

export PACKAGEFILE
export PATCHDIR
export PRGPATH
export CACERTFILE
export PATCHLIST

LOGMSG=`cachedl.rb 2>&1`
RC=$?
RESULT=`echo "$LOGMSG" | head -1`
if [ "[ERROR]" = "${RESULT:0:7}" ] ; then
  echomsg "faild in the download of the patch program." ${LOG}
  echomsg "${LOGMSG}" ${LOG}
  jobend97 "${RESULT}"
else
  if [ $RC -ne 0 ]; then
    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE0000001PRGMNT01,$HOSPNUM
    exit 0
  fi
fi

rm -f $PATCHMD5
touch $PATCHMD5

export PRGDIR
export PATCHMD5

if [ ! -e $PATCHLIST ]; then
  RESULT="[ERROR] $PATCHLIST not found" 
  jobend97 "${RESULT}"
fi

for file in `cat $PATCHLIST`
do
  echomsg "$file Execute." ${LOG}
  rm -rf $PRGDIR/*
  if [ -e $PATCHDIR/$file ]; then
    tar zxf $PATCHDIR/$file -C $PRGDIR 2>&1 >> ${LOG}
    if [ $? -ne 0 ]; then
      RESULT="[ERROR] tar zxf $file" 
      jobend97 "${RESULT}"
    fi
    mv $PRGDIR/patch/* $PRGDIR 2>&1 >> ${LOG}
    rmdir $PRGDIR/patch 2>&1 >> ${LOG}
    if [ "$METHOD" = "update" ]; then
      bash $PRGDIR/PROCEDURE $PRGDIR 2>&1 >> ${LOG}
    else
      bash $PRGDIR/INITIATOR $PRGDIR 2>&1 >> ${LOG}
    fi
    if [ $? -ne 0 ]; then
      RESULT="[ERROR] $file/Execute Error" 
      jobend97 "${RESULT}"
    fi
    LOGMSG=`program_upgrade_patchmd5.rb 2>&1`
    RESULT=`echo "$LOGMSG" | head -1`
    if [ "[ERROR]" = "${RESULT:0:7}" ] ; then
      echomsg "faild in the md5 list." ${LOG}
      echomsg "${LOGMSG}" ${LOG}
      jobend97 "${RESULT}"
    fi
  fi
done

rm -rf $PRGDIR

LOGMSG=`program_upgrade_verify.rb 2>&1`
RESULT=`echo "$LOGMSG" | head -1`
if [ "[ERROR]" = "${RESULT:0:7}" ] ; then
  echomsg "faild in the verify." ${LOG}
  echomsg "${LOGMSG}" ${LOG}
  jobend97 "${RESULT}"
fi

if [ "$METHOD" = "update" ]; then
  echomsg "site-upgrade start." ${LOG}
  site-upgrade.sh >> ${LOG}
  echomsg "site-upgrade end." ${LOG}
fi

if [ "$METHOD" = "update" ]; then
  #monitor restart (SIGHUP)
  if [ -e /var/run/jma-receipt/monitor.pid ]; then
    echomsg "monitor restart." ${LOG}
    kill -HUP `cat /var/run/jma-receipt/monitor.pid`
  else
    RESULT="[ERROR] monitor.pid is not found. don't start again."
    echomsg "${RESULT}" ${LOG}
    jobend97 "${RESULT}"
  fi
fi

echomsg "patch program processing succeeded." ${LOG}
$DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE0000001PRGMNT00,$HOSPNUM

exit 0
