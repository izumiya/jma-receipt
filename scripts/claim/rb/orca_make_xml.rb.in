Encoding.default_external = "euc-jisx0213"
" , ''
	end  while  /#{"
"}/ =~ seq_data

	# ----------
	$stderr.puts	'equalマクロの展開中です'		if debug_mode!=0
	# レイアウト定義データのうち、equalマクロ情報を展開
	macro_execute_equal(rec_layout)
	$stderr.puts	'equalマクロの展開が終了しました'		if debug_mode!=0
	# ----------
	# レイアウト定義情報のコメントと空白行と行頭・行末・項目間の空白除去
	record_del_comment_space(rec_layout)
	# ----------
	$stderr.puts	'ifdefマクロの解析中です'		if debug_mode!=0
	# IFDEFマクロの実行
	macro_execute_ifdefl(rec_layout, seq_data)
	$stderr.puts	'ifdefマクロの解析が終了しました'		if debug_mode!=0
	# ----------


	# ----------
	$stderr.puts	'メイン処理(1)の実行中です'		if debug_mode!=0
	# ----------

	# レイアウト定義データを行単位で配列にする
	rec_layout2 = get_record_layout_linediv(rec_layout)
	rec_layout = nil
	# ----------
	$stderr.puts	'メイン処理(2)の実行中です'		if debug_mode!=0
	# ----------
#	rec_layout2.each do |e|
#		$stderr.puts '['+e+']'
#	end
	# 行数分置換処理を行う
	rec_layout2.each do |e|
		# シーケンシャルデータとレイアウト定義データから、
		# パラメータ名と置換内容の取得
		cdata = get_record_data(e, seq_data)

		if cdata!=nil
#			while  /#{cdata[0]}/ =~ xml
			if cdata[1] != ''
				xml.gsub! /#{cdata[0]}/, cdata[1]
				# **********
				deb_counter += 1	# カウンタのカウントアップ
				# **********
			end
#			end
			cdata=nil
		end
		e = nil
	end
	# **********
	$stderr.puts 'gsub回数 = [' + String(deb_counter) + ']'
	# **********


	# ----------
	$stderr.puts	'メイン処理(3)の実行中です'		if debug_mode!=0
	# ----------

	# コメントの削除処理
	while  /^\s*<!--[\s\S]*?-->\s*
/ =~ xml
		xml.gsub! /^\s*<!--[\s\S]*?-->\s*
/ , ''
	end


	# 空白行の削除処理
	while  /^\s*?
/ =~ xml
		xml.gsub! /^\s*?
/ , ''
	end

	while  /
\s*?
/ =~ xml
		xml.gsub! /
\s*?
/ , "
"
	end


	# タブを半角空白4文字に変換
	while  /#{"\t"}/ =~ xml
		xml.gsub! /#{"\t"}/ , '    '
	end

	# del %______%

	xml.gsub! /%(.)+?%/ , ''

	# 空白のエレメントの削除処理
	while  /^\s*<([\w:]+)[^>]*>\s*<\/\1>\s*
/ =~ xml
		xml.gsub! /^\s*<([\w:]+)[^>]*>\s*<\/\1>\s*
/ , ''
	end


	# エレメント最後の余分な空白の削除処理
	# ----------
	$stderr.puts	'メイン処理が終了しました'		if debug_mode!=0
	# ----------


	return [0, xml]
end


# ======================================================================
# main部


if __FILE__ == $0
	# このスクリプトを単独で起動した

#	xml = ARGF.read
#	if xml==nil
#		$stderr.puts '標準入力から読み込めませんでした'
#		exit 2
#	end

	xml=''
	open(in_fname, 'r') do |fp_i|
		xml = fp_i.read
	end
	if xml==nil or xml==''
		$stderr.puts 'テンプレートXMLファイルが読み込めませんでした'
		exit 2
	end




	# レイアウト定義情報を元に、置換処理

	# シーケンシャルデータの読み込み
	rec_layout = ''
	seq_data = ''
	open(seq_fname, 'r') do |fp_s|
		seq_data = fp_s.read
	end
	# レイアウトデータの読み込み
	open(lay_fname, 'r') do |fp_l|
		rec_layout = fp_l.read
	end



	xml_o = ''
	ret = []
	# XMLへの変換処理
	ret = conversion_seq_to_xml(xml, seq_data, rec_layout, 1)
#	ret = conversion_seq_to_xml(xml, seq_data, rec_layout, 0)

	ret_cd = ret[0]
	xml_o = ret[1]



#	open (out_fname, 'w') do |fp_o|
#		fp_o.print xml_o
#	end
	print xml_o


end
