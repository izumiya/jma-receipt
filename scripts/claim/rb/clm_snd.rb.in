Encoding.default_external = "euc-jisx0213"
"
  exit
end
unless $out_code == "u8" || $out_code == "euc" || $out_code == "sjis" || $out_code == "jis"
  $out_code = "no arg" unless $out_code
  print "ERR: invalid out_code [ " + $out_code + " ]
"
  exit
end

#----- convert claim data J-code to $out_code ----------
print "Convert J-code to #{$out_code}
"
snd_file = $file_path_name.gsub(/.xml$/, "_#{$out_code}_snd.xml")
`ruby xml_jcnv.rb #{$file_path_name} to#{$out_code} -f > #{snd_file}`  
#-------------------------------------------------------

logmsg = Time.now.strftime("%Y-%m-%dT%H:%M:%S") + "
"
logmsg = logmsg + "  Send to [" + $server + "] port [" + $port + "]
"

return_code = 0

begin
  sock = TCPSocket.open($server, $port)
  puts "Connected"

  flsnd = FileSend.new(snd_file, sock)
  resp = RcvRsp.new(sock)

  print "Strat sending file [" + snd_file + "]
"

  flsnd.start
  flsnd.end
  print "Complete sending file [" + snd_file + "]
"
  logmsg = logmsg + "  Send File [" + snd_file + "]
"

  ans = resp.rcv
  print "  Receive respons from server [ " + ans + " ]
"
  logmsg = logmsg + "  Receive respons from server [ " + ans + " ]

"
  
  sock.close
  if ans == "OK"
    return_code = 0
  else
    return_code = 02
  end

rescue
  puts "ERR: Can't open socket to server(0)"
  logmsg = logmsg + "  ERR: Can't open socket to server(0)

"
  return_code = 01
ensure
  "(nothing)"
end

open($logfl, "a") do |log|
  log.puts logmsg
end

exit return_code

#----- Script end -------------------------------------------
