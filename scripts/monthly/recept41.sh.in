#!/bin/bash

if test -z "$JMARECEIPT_ENV" ; then
    JMARECEIPT_ENV="@jma-receipt-env@"
fi
if ! test -f "$JMARECEIPT_ENV"; then
    exit 0
fi

. $JMARECEIPT_ENV

#-------------------------------------------#
#    労災レセ電ファイル作成処理
#        $1-${11} 印刷ＤＢ用固定引数
#        $13 レセ電ファイル出力先
#        $14 JOBID 
#        $15 SHELLID
#        $16 エラーファイル名 
#        $17 ファイル出力先区分
#        $18 端末ｉｐアドレス
#        $19 入外区分
#        ${20} HOSPNUM
#        ${21} レセプト作成区分
#            1:提出用レセ、2:点検用レセ
#        ${22} 症状詳記作成区分
#            1:作成する
#        ${23} 光ディスク等送付書作成区分
#            0:作成する
#        ${24} レセ電データ履歴保存設定区分
#            1:履歴保存する
#-------------------------------------------#

    rennum=0
##  2HD flesize  
    fixedsize=1441500

##  エラーファイル削除
	echo $#
	echo "echo " ${16}
    if  [ -e ${16} ]; then
        rm ${16}
    fi

    LOG_FILE="/var/log/jma-receipt/${20}recept41.log"

    echo "arg5 =  [" ${5} "]"  >$LOG_FILE
    echo "arg13 = [" ${13} "]" >>$LOG_FILE
    echo "arg17 = [" ${17} "]" >>$LOG_FILE
    echo "arg18 = [" ${18} "]" >>$LOG_FILE
    echo "arg19 = [" ${19} "]" >>$LOG_FILE
    echo "arg20 = [" ${20} "]" >>$LOG_FILE
    echo "arg21 = [" ${21} "]" >>$LOG_FILE
    echo "arg22 = [" ${22} "]" >>$LOG_FILE
    echo "arg23 = [" ${23} "]" >>$LOG_FILE
    echo "arg24 = [" ${24} "]" >>$LOG_FILE
    echo "hostname =  [" `hostname`  "]" >>$LOG_FILE

    RECEFILE1="RREC"
    RECEFILE2="RECEDEN"

    if  [ ${21} -eq '2' ]; then
	RECEFILE1="TENKENRC"
	RECEFILE2="TENKENT"
	echo "file name change!" >>$LOG_FILE
    fi

#   該当ファイル削除
	rm  ${13}${20}${RECEFILE1}*.UKE
	rm  /tmp/${20}${RECEFILE2}*.txt

#   レセ電ファイル作成

    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM700 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${13},${14},${15},${19},${17},$fixedsize,${21},${20},${16} >> $LOG_FILE 2>&1
    if  [ -e ${16} ]; then
        echo "--- BM700 err file exist ---" >> $LOG_FILE 2>&1
        exit 
    fi

#####
#   漢字コード変換（ＥＵＣからシフトＪＩＳ）	
    echo "ファイルの処理(sjis変換)"

   all=`ls  /tmp/${20}${RECEFILE2}*.txt`
 
    for f in $all ; do
    	    echo "f= " $f
            echo "mm = " ${f:14:2}
            echo "nn = " ${f:16:2}
            echo /tmp/${20}${RECEFILE1}${f:14:2}${f:16:2}.UKE

            nkf -s $f > /tmp/${20}${RECEFILE1}${f:14:2}${f:16:2}.UKE
    done

    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15},${20} >> $LOG_FILE
    exit 
#####

#   漢字コード変換（ＥＵＣからシフトＪＩＳ）	
	    if  test -s "/tmp/${20}${RECEFILE2}${FILENUM:${#FILENUM}-2:2}.txt"; then
    	    echo ${FILENUM:${#FILENUM}-2:2}
	    else
    	    echo ${FILENUM:${#FILENUM}-2:2} "nothing"
		    break
	    fi
	    if  test "${FILENUM:${#FILENUM}-2:2}"	=	"01"; then
		    echo "先頭ファイルの処理(sjis変換)"
		    nkf -s /tmp/${20}${RECEFILE2}${FILENUM:${#FILENUM}-2:2}.txt > ${13}${20}${RECEFILE1}.UKE
	    else
		    echo "２番目以降のファイルの処理(sjis変換)"
		    nkf -s /tmp/${20}${RECEFILE2}${FILENUM:${#FILENUM}-2:2}.txt > ${13}${20}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE
	    fi
    done

#   先頭ファイルのみ処理 

    if  [ -e ${13}${20}${RECEFILE1}.UKE ]; then
        echo "--- RECEIPTC.UKE exist ---" >>$LOG_FILE
    fi
    FDDHOST=`echo ${18}|tr \[\] "  "`
    echo "FDDHOST = " $FDDHOST
#
    echo "先頭ファイルの処理(fdw処理)" ${13}${20}${RECEFILE1}.UKE
    if  [ ${17} -eq '1' ]; then
        echo "--- fdw-> fd start ---" >>$LOG_FILE
	$FDW -host $FDDHOST -command fd-write.sh ${13}${20}${RECEFILE1}.UKE ${RECEFILE1}.UKE
	RC=$?
        echo "--- fdw-> fd end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD:${#ERRCD}-4:4},${20} >> $LOG_FILE
        echo "--- fdw-> fd err   ---" >>$LOG_FILE
            exit
	fi
    fi

    if  [ ${17} -eq '2' ]; then
        echo "--- fdw-> mo start ---" >>$LOG_FILE
	$FDW -host $FDDHOST -command mo-write.sh ${13}${20}${RECEFILE1}.UKE ${RECEFILE1}.UKE
	RC=$?
        echo "--- fdw-> mo end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15},${20} >> $LOG_FILE

    exit 

	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD:${#ERRCD}-4:4},${20} >> $LOG_FILE
            echo "--- fdw-> mo err   ---" >>$LOG_FILE
            exit
	fi
    fi

#   履歴保存先のフォルダへファイル作成
    if  [ ${24} -eq '1' ]; then
        if  [ ${17} -eq '3' ]|| [ ${17} -eq '4' ]; then
            OUT_FOLDER="${13}${20}_rousai_${5}/"
            if ! test -d  "$OUT_FOLDER"; then
                 mkdir $OUT_FOLDER
                 RC=$?
                 echo "--- mkdir end   ---[" $RC  "]" >>$LOG_FILE
                 if  [ $RC -ne '0' ]; then
                     ERRCD='0077'
                     $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD},${20} >> $LOG_FILE
                     echo "--- mkdir  err   ---" >>$LOG_FILE
                     exit
                 fi
                 chmod -R g+r ${OUT_FOLDER}
                 echo "--- mkdir rireki holder ---" >>$LOG_FILE
            else
                 rm $OUT_FOLDER/${RECEFILE1}.UKE*
                 echo "--- rm rireki holder file ---" >>$LOG_FILE
            fi
            echo "--- folder name  [" $OUT_FOLDER "]" >>$LOG_FILE

            NUM=0
            while [ $NUM -lt 100 ]
            do
                NUM=`expr $NUM + 1`
                FILENUM='0'$NUM
                echo "filenum" ${FILENUM:${#FILENUM}-2:2}
                if  test "${FILENUM:${#FILENUM}-2:2}"	=	"01"; then
		    echo "先頭ファイルの処理(履歴保存)"
                    if  test -e "${13}${20}${RECEFILE1}.UKE"; then
                        cp ${13}${20}${RECEFILE1}.UKE ${OUT_FOLDER}${RECEFILE1}.UKE               
                        chmod -R g+r ${OUT_FOLDER}${RECEFILE1}.UKE
	            else
    	                echo ${13}${20}${RECEFILE1}.UKE "nothing"
		        break
	            fi
                else     
		    echo "２番目以降のファイルの処理(履歴保存)"
	           if  test -e "${13}${20}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE"; then
                       cp ${13}${20}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE ${OUT_FOLDER}${RECEFILE1}.UKE_$NUM              
                       chmod -R g+r ${OUT_FOLDER}${RECEFILE1}.UKE_$NUM
                    else
    	                echo ${13}${20}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE "nothing"
		        break
	            fi
                fi
            done 
        fi
    fi

#   ＣＤ−Ｒ出力のときisoファイル作成
    if  [ ${17} -eq '6' ]; then
        echo "--- iso start ---" >>$LOG_FILE
        DIR=`mktemp -d`
        cp ${13}${20}${RECEFILE1}.UKE ${DIR}/${RECEFILE1}.UKE
        mkisofs --input-charset cp437 -o ${13}${20}${RECEFILE1}.iso ${DIR}/
	RC=$?
        echo "--- iso end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD:${#ERRCD}-4:4},${20} >> $LOG_FILE
            echo "--- iso err   ---" >>$LOG_FILE
            exit
	fi
    fi

    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15},${20} >> $LOG_FILE

    exit 
